spring.application.name=weather
server.port=8080

# 로깅 설정
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.thymeleaf=DEBUG
logging.level.org.springframework.boot.web.embedded=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Thymeleaf 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.enabled=true

# Batch 설정
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=always

# Database 초기화 순서 설정
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# Database 설정
spring.datasource.url=jdbc:postgresql://localhost:5432/weather
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# 데이터베이스 연결 검증
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# SQL 초기 데이터 설정
spring.sql.init.mode=always

# Weather API Configuration
weather.api.key=2i9cU03AVQjHHJA/80DtYGh787LwKnO10x8M4C0PsTYREtfTTTzfQK4s/MsaNJICSW6vEBj5WxmwlAzvE8cpBA==
weather.api.url=http://apis.data.go.kr/1360000/AsosDalyInfoService
